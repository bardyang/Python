#展开嵌套的序列
#yield from在涉及到基于协程的并发编程中很重要
#语句yield from在生成器中调用其他生成器作为子例程 和for循环的作用一样

iterms = [1,2,[3,4,[5,6],7],8]
#1 2 3 4 5 6 7 8 
for x in flatten(items):
	print(x)

from collections import Iterable 
def flatten(iterms,ignore_types=(str,bytes)):
	for x in items:
		if isinstance(x,Iterable) and not isinstance(x,ignore_types):
			yield from flatten(x)
		else:
			yield x


>>>items = ['Dave','Paula',['Thomas','Liwis']]
>>>for x in flatten(item):
	print(x)
Dave
Paula
Thomas
Lewis
